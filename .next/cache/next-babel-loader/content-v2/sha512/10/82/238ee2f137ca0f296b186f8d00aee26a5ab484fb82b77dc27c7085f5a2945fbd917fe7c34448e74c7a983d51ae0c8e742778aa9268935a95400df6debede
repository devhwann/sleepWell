{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hwan/Desktop/workspace/MostProject/sleepWell/src/components/DarkModeToggle.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../pages/_app';\nimport { lightTheme } from '../styles/theme';\nconst ToggleButton = styled('button').withConfig({\n  displayName: \"DarkModeToggle__ToggleButton\",\n  componentId: \"u1rl3g-0\"\n})([\"position:fixed;width:95px;height:45px;right:2rem;top:1;border-radius:30px;cursor:pointer;display:flex;flex-direction:row;justify-content:flex-start;align-items:center;background:\", \";color:\", \";box-shadow:3px 3px 10px rgba(0,0,0,0.2);z-index:10000;&:hover{filter:brightness(\", \");}\"], ({\n  theme\n}) => theme.toggleBackground, ({\n  theme\n}) => theme.text, ({\n  theme\n}) => theme === lightTheme ? '0.9' : '1.13');\n_c = ToggleButton;\nconst Emoji = styled.figure.withConfig({\n  displayName: \"DarkModeToggle__Emoji\",\n  componentId: \"u1rl3g-1\"\n})([\"width:33px;height:33px;border-radius:100%;font-size:1.5rem;display:flex;justify-content:center;align-items:center;\"]);\n_c2 = Emoji;\nconst ModeContent = styled.p.withConfig({\n  displayName: \"DarkModeToggle__ModeContent\",\n  componentId: \"u1rl3g-2\"\n})([\"font-size:0.8rem;margin-left:5px;\"]);\n_c3 = ModeContent;\nexport default function DarkModeToggle() {\n  _s();\n\n  const {\n    theme,\n    toggleTheme\n  } = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(ToggleButton, {\n    onClick: toggleTheme,\n    theme: theme,\n    children: theme === lightTheme ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Emoji, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"darkMoon\",\n          children: \"\\uD83C\\uDF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModeContent, {\n        children: \"Dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Emoji, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"lightSun\",\n          children: \"\\uD83C\\uDF1E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModeContent, {\n        children: \"Light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DarkModeToggle, \"EFRZgBTSn7R64yv9sbxwgPkwfJQ=\");\n\n_c4 = DarkModeToggle;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ToggleButton\");\n$RefreshReg$(_c2, \"Emoji\");\n$RefreshReg$(_c3, \"ModeContent\");\n$RefreshReg$(_c4, \"DarkModeToggle\");","map":{"version":3,"sources":["/Users/hwan/Desktop/workspace/MostProject/sleepWell/src/components/DarkModeToggle.tsx"],"names":["React","useContext","styled","ThemeContext","lightTheme","ToggleButton","theme","toggleBackground","text","Emoji","figure","ModeContent","p","DarkModeToggle","toggleTheme"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,UAAT,QAAkC,iBAAlC;AAMA,MAAMC,YAAY,GAAGH,MAAM,CAAC,QAAD,CAAT;AAAA;AAAA;AAAA,kSAYF,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,gBAZnB,EAaP,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,IAbd,EAkBO,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAgBA,KAAK,KAAKF,UAAV,GAAuB,KAAvB,GAA+B,MAlBtD,CAAlB;KAAMC,Y;AAsBN,MAAMI,KAAK,GAAGP,MAAM,CAACQ,MAAV;AAAA;AAAA;AAAA,0HAAX;MAAMD,K;AAUN,MAAME,WAAW,GAAGT,MAAM,CAACU,CAAV;AAAA;AAAA;AAAA,yCAAjB;MAAMD,W;AAKN,eAAe,SAASE,cAAT,GAAwC;AAAA;;AACrD,QAAM;AAAEP,IAAAA,KAAF;AAASQ,IAAAA;AAAT,MAAyBb,UAAU,CAACE,YAAD,CAAzC;AAEA,sBACE,QAAC,YAAD;AAAc,IAAA,OAAO,EAAEW,WAAvB;AAAoC,IAAA,KAAK,EAAER,KAA3C;AAAA,cACGA,KAAK,KAAKF,UAAV,gBACC;AAAA,8BACE,QAAC,KAAD;AAAA,+BACE;AAAM,UAAA,IAAI,EAAC,KAAX;AAAiB,wBAAW,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,oBADD,gBAUC;AAAA,8BACE,QAAC,KAAD;AAAA,+BACE;AAAM,UAAA,IAAI,EAAC,KAAX;AAAiB,wBAAW,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA1BuBS,c;;MAAAA,c","sourcesContent":["import React, { ReactElement, useContext } from 'react';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../pages/_app';\nimport { lightTheme, Theme } from '../styles/theme';\n\ninterface ToggleProps {\n  theme: Theme;\n}\n\nconst ToggleButton = styled('button')<ToggleProps>`\n  position: fixed;\n  width: 95px;\n  height: 45px;\n  right: 2rem;\n  top: 1;\n  border-radius: 30px;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  background: ${({ theme }) => theme.toggleBackground};\n  color: ${({ theme }) => theme.text};\n  box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\n  z-index: 10000;\n\n  &:hover {\n    filter: brightness(${({ theme }) => (theme === lightTheme ? '0.9' : '1.13')});\n  }\n`;\n\nconst Emoji = styled.figure`\n  width: 33px;\n  height: 33px;\n  border-radius: 100%;\n  font-size: 1.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModeContent = styled.p`\n  font-size: 0.8rem;\n  margin-left: 5px;\n`;\n\nexport default function DarkModeToggle(): ReactElement {\n  const { theme, toggleTheme } = useContext(ThemeContext);\n\n  return (\n    <ToggleButton onClick={toggleTheme} theme={theme}>\n      {theme === lightTheme ? (\n        <>\n          <Emoji>\n            <span role=\"img\" aria-label=\"darkMoon\">\n              ðŸŒš\n            </span>\n          </Emoji>\n          <ModeContent>Dark</ModeContent>\n        </>\n      ) : (\n        <>\n          <Emoji>\n            <span role=\"img\" aria-label=\"lightSun\">\n              ðŸŒž\n            </span>\n          </Emoji>\n          <ModeContent>Light</ModeContent>\n        </>\n      )}\n    </ToggleButton>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}