{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { lightTheme, darkTheme } from '../styles/theme';\nexport const useDarkMode = () => {\n  _s();\n\n  const {\n    0: theme,\n    1: setTheme\n  } = useState(lightTheme);\n\n  const setMode = mode => {\n    mode === lightTheme ? window.localStorage.setItem('theme', 'light') : window.localStorage.setItem('theme', 'dark');\n    setTheme(mode);\n  };\n\n  const toggleTheme = () => {\n    theme === lightTheme ? setMode(darkTheme) : setMode(lightTheme);\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n\n    if (localTheme !== null) {\n      if (localTheme === 'dark') {\n        setTheme(darkTheme);\n      } else {\n        setTheme(lightTheme);\n      }\n    }\n  }, []);\n  return {\n    theme,\n    toggleTheme\n  };\n};\n\n_s(useDarkMode, \"/uUKSeb1gTWWUnDRGJdQywM6yyg=\");","map":{"version":3,"sources":["/Users/hwan/Desktop/workspace/MostProject/sleepWell/src/hooks/useDarkMode.tsx"],"names":["useEffect","useState","lightTheme","darkTheme","useDarkMode","theme","setTheme","setMode","mode","window","localStorage","setItem","toggleTheme","localTheme","getItem"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAA6C,iBAA7C;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAQC,UAAR,CAAlC;;AAEA,QAAMK,OAAO,GAAIC,IAAD,IAAiB;AAC/BA,IAAAA,IAAI,KAAKN,UAAT,GAAsBO,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,OAArC,CAAtB,GAAsEF,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,MAArC,CAAtE;AACAL,IAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,GAHD;;AAKA,QAAMI,WAAW,GAAG,MAAM;AACxBP,IAAAA,KAAK,KAAKH,UAAV,GAAuBK,OAAO,CAACJ,SAAD,CAA9B,GAA4CI,OAAO,CAACL,UAAD,CAAnD;AACD,GAFD;;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,UAAU,GAAGJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,OAA5B,CAAnB;;AACA,QAAID,UAAU,KAAK,IAAnB,EAAyB;AACvB,UAAIA,UAAU,KAAK,MAAnB,EAA2B;AACzBP,QAAAA,QAAQ,CAACH,SAAD,CAAR;AACD,OAFD,MAEO;AACLG,QAAAA,QAAQ,CAACJ,UAAD,CAAR;AACD;AACF;AACF,GATQ,EASN,EATM,CAAT;AAWA,SAAO;AAAEG,IAAAA,KAAF;AAASO,IAAAA;AAAT,GAAP;AACD,CAxBM;;GAAMR,W","sourcesContent":["import { useEffect, useState } from 'react';\nimport { lightTheme, darkTheme, Theme } from '../styles/theme';\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState<Theme>(lightTheme);\n\n  const setMode = (mode: Theme) => {\n    mode === lightTheme ? window.localStorage.setItem('theme', 'light') : window.localStorage.setItem('theme', 'dark');\n    setTheme(mode);\n  };\n\n  const toggleTheme = () => {\n    theme === lightTheme ? setMode(darkTheme) : setMode(lightTheme);\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    if (localTheme !== null) {\n      if (localTheme === 'dark') {\n        setTheme(darkTheme);\n      } else {\n        setTheme(lightTheme);\n      }\n    }\n  }, []);\n\n  return { theme, toggleTheme };\n};\n"]},"metadata":{},"sourceType":"module"}