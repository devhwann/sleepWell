{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hwan/Desktop/workspace/MostProject/sleepWell/src/components/calc/Guid/SleepGuid.tsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nconst data = {\n  labels: ['자정', '2', '3', '4', '5', '6', '7', '8'],\n  datasets: [{\n    label: '수면 주기',\n    display: false,\n    fill: false,\n    lineTension: 0.5,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [20, 10, 15, 5, 15, 5, 20] // rtl: true,\n\n  }]\n};\nconst opts = {\n  scales: {\n    xAxes: [{\n      stacked: true,\n      display: false,\n      categoryPercentage: 1,\n      barPercentage: 1\n    }],\n    yAxes: [{\n      display: false,\n      stacked: true,\n      categoryPercentage: 1,\n      barPercentage: 1\n    }]\n  },\n  legend: {\n    labels: {\n      boxWidth: 12\n    }\n  },\n  plugins: {\n    colorschemes: {\n      scheme: 'tableau.ClassicMedium10'\n    },\n\n    /* ,datalabels: {\n          formatter: (value, context) => { console.log(value,context)\n            const data = context.chart.data;\n            const { datasetIndex, dataIndex } = context;\n            return `${data.calculatedData[datasetIndex][dataIndex]}% (${data.originalData[datasetIndex][dataIndex]})`;\n          }\n        }*/\n    stacked100: {\n      enable: true,\n      replaceTooltipLabel: false\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: 'x',\n    intersect: true,\n    position: 'nearest',\n    callbacks: {\n      title: () => {\n        return '';\n      }\n      /*      ,label: (tooltipItem, data) => {\n            const datasetIndex = tooltipItem.datasetIndex;\n            const datasetLabel = data.datasets[datasetIndex].label;\n            // You can use two type values.\n            // `data.originalData` is raw values,\n            // `data.calculatedData` is percentage values, e.g. 20.5 (The total value is 100.0)\n            const originalValue = data.originalData[datasetIndex][tooltipItem.index];\n            const rateValue = data.calculatedData[datasetIndex][tooltipItem.index];\n            return `${datasetLabel}: ${rateValue}% (${originalValue}E)`;\n          }*/\n\n    }\n  }\n};\n\nconst SleepGuid = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC218\\uBA74 \\uC8FC\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\b* \\uC218\\uBA74 \\uC8FC\\uAE30\\uB294 \\uAC1C\\uC778\\uB9C8\\uB2E4 \\uCC28\\uC774\\uAC00 \\uC788\\uC73C\\uBBC0\\uB85C\\b \\uACC4\\uC0B0\\uD55C \\uC218\\uBA74 \\uC8FC\\uAE30\\uAC00 \\uB9DE\\uC9C0 \\uC54A\\uC744 \\uACBD\\uC6B0\\uC5D0 +-5~30\\uBD84 \\uC815\\uB3C4\\uC758 \\uCC28\\uC774\\uB97C \\uB46C\\uC11C \\uC790\\uC2E0\\uC5D0\\uAC8C \\uB9DE\\uB294 \\uC218\\uBA74 \\uC8FC\\uAE30\\uB97C \\uACC4\\uC0B0\\uD558\\uC5EC \\uCC3E\\uB294\\uAC78 \\uCD94\\uCC9C \\uB4DC\\uB9BD\\uB2C8\\uB2E4!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      type: \"line\",\n      data: data,\n      options: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SleepGuid;","map":{"version":3,"sources":["/Users/hwan/Desktop/workspace/MostProject/sleepWell/src/components/calc/Guid/SleepGuid.tsx"],"names":["React","Line","data","labels","datasets","label","display","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","opts","scales","xAxes","stacked","categoryPercentage","barPercentage","yAxes","legend","boxWidth","plugins","colorschemes","scheme","stacked100","enable","replaceTooltipLabel","maintainAspectRatio","tooltips","mode","intersect","position","callbacks","title","SleepGuid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart } from 'chart.js';\n\ninterface options {\n  scale: string;\n  yAxes: string;\n  ticks: string;\n  display: boolean;\n}\ninterface AppProps {}\nconst data = {\n  labels: ['자정', '2', '3', '4', '5', '6', '7', '8'],\n\n  datasets: [\n    {\n      label: '수면 주기',\n      display: false,\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [20, 10, 15, 5, 15, 5, 20],\n      // rtl: true,\n    },\n  ],\n};\n\nconst opts: chartjs.ChartOptions = {\n  scales: {\n    xAxes: [\n      {\n        stacked: true,\n        display: false,\n        categoryPercentage: 1,\n        barPercentage: 1,\n      },\n    ],\n    yAxes: [\n      {\n        display: false,\n        stacked: true,\n        categoryPercentage: 1,\n        barPercentage: 1,\n      },\n    ],\n  },\n  legend: {\n    labels: {\n      boxWidth: 12,\n    },\n  },\n  plugins: {\n    colorschemes: {\n      scheme: 'tableau.ClassicMedium10',\n    },\n    /* ,datalabels: {\n          formatter: (value, context) => { console.log(value,context)\n            const data = context.chart.data;\n            const { datasetIndex, dataIndex } = context;\n            return `${data.calculatedData[datasetIndex][dataIndex]}% (${data.originalData[datasetIndex][dataIndex]})`;\n          }\n        }*/\n    stacked100: { enable: true, replaceTooltipLabel: false },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: 'x',\n    intersect: true,\n    position: 'nearest',\n    callbacks: {\n      title: () => {\n        return '';\n      },\n      /*      ,label: (tooltipItem, data) => {\n            const datasetIndex = tooltipItem.datasetIndex;\n            const datasetLabel = data.datasets[datasetIndex].label;\n            // You can use two type values.\n            // `data.originalData` is raw values,\n            // `data.calculatedData` is percentage values, e.g. 20.5 (The total value is 100.0)\n            const originalValue = data.originalData[datasetIndex][tooltipItem.index];\n            const rateValue = data.calculatedData[datasetIndex][tooltipItem.index];\n            return `${datasetLabel}: ${rateValue}% (${originalValue}E)`;\n          }*/\n    },\n  },\n};\n\nconst SleepGuid = () => {\n  return (\n    <div>\n      <h1>수면 주기</h1>\n\n      <p></p>\n      <p>\n        \b* 수면 주기는 개인마다 차이가 있으므로\b 계산한 수면 주기가 맞지 않을 경우에 +-5~30분 정도의 차이를 둬서 자신에게\n        맞는 수면 주기를 계산하여 찾는걸 추천 드립니다!\n      </p>\n      <Line type=\"line\" data={data} options={opts} />\n    </div>\n  );\n};\n\nexport default SleepGuid;\n"]},"metadata":{},"sourceType":"module"}