{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\nimport StaticTimePicker from '@material-ui/lab/StaticTimePicker';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Moment from 'moment';\nconst useStyles = makeStyles({\n  root: {\n    background: ''\n  },\n  pad: {\n    padding: '1rem 0'\n  },\n  margin: {\n    marginTop: '1rem'\n  },\n  font: {\n    fontSize: '1.25rem',\n    lineHeight: '2.2rem'\n  }\n});\n\nconst SleepTimePicker = () => {\n  const classes = useStyles();\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: value,\n    1: setValue\n  } = useState(new Date());\n  const {\n    0: times,\n    1: setTimes\n  } = useState([]);\n\n  const handleChange = value => {\n    setValue(value); // value 사용자가 선택한 시간.\n\n    console.log(value);\n  };\n\n  const onClickTimeCalc = () => {\n    setShow(true);\n    setTimes([// times.concat(),\n    {\n      id: 0,\n      calc: '1단계 ' + Moment(value).add({\n        hours: 1,\n        minutes: 44\n      }).format('hh:mm')\n    }, {\n      id: 1,\n      calc: '2단계 ' + Moment(value).add({\n        hours: 3,\n        minutes: 14\n      }).format('hh:mm')\n    }, {\n      id: 2,\n      calc: '3단계 ' + Moment(value).add({\n        hours: 4,\n        minutes: 44\n      }).format('hh:mm')\n    }, {\n      id: 3,\n      calc: '4단계 ' + Moment(value).add({\n        hours: 6,\n        minutes: 14\n      }).format('hh:mm')\n    }, {\n      id: 4,\n      calc: '5단계 ' + Moment(value).add({\n        hours: 7,\n        minutes: 44\n      }).format('hh:mm')\n    }, {\n      id: 5,\n      calc: '6단계 ' + Moment(value).add({\n        hours: 9,\n        minutes: 14\n      }).format('hh:mm')\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxs(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: [/*#__PURE__*/_jsx(StaticTimePicker, {\n      ampm: true,\n      className: classes.root,\n      orientation: \"landscape\",\n      openTo: \"hours\",\n      toolbarTitle: \"\\uC2DC\\uAC04\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\",\n      value: value,\n      onChange: handleChange,\n      renderInput: params => /*#__PURE__*/_jsx(TextField, _objectSpread(_objectSpread({}, params), {}, {\n        variant: \"standard\"\n      }))\n    }), /*#__PURE__*/_jsx(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: onClickTimeCalc,\n      className: classes.margin,\n      children: \"\\uC2DC\\uC791\\uD558\\uAE30\"\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        style: {\n          display: show ? 'block' : 'none'\n        },\n        className: classes.pad,\n        children: \"\\uC544\\uB798\\uB294 \\uC124\\uC815\\uD55C \\uC2DC\\uAC04\\uC5D0 \\uB9DE\\uCDB0 \\uACC4\\uC0B0\\uB41C \\uC77C\\uBC18\\uC801\\uC778 \\uC218\\uBA74 \\uC8FC\\uAE30 \\uC774\\uBA70 \\uC544\\uB798 \\uC2DC\\uAC04\\uC5D0 \\uAE30\\uC0C1\\uD558\\uB294\\uAC8C \\uC88B\\uC2B5\\uB2C8\\uB2E4.\"\n      }), /*#__PURE__*/_jsx(\"ul\", {\n        children: times.map((time, index) => /*#__PURE__*/_jsx(\"li\", {\n          className: classes.font,\n          children: time.calc\n        }, index))\n      })]\n    })]\n  });\n};\n\nexport default SleepTimePicker;","map":null,"metadata":{},"sourceType":"module"}